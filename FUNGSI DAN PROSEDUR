#include<Python3.h>
import csv
import os
from os import path

dataBase = []

def setDatabase(fileName):
	file = open(fileName, "r")

	for lines in file:
		line = lines[:len(lines)-1]     #menghilangkan newLine "\n" dari setiap baris
		line += ","     #Pembatas data terakhir.

		dataLine = []
		data = ""
		for i in range(len(line)):
			if (line[i] != ","):
				data += line[i]
			else:
				dataLine.append(data)
				data = ""

		dataBase.append(dataLine)

#Load file User
setDatabase("User.csv")




# Fungsi Jafar
#fungsi untuk memasukan data csv ke array
def load(arrData, csv_file_path): 
    with open(csv_file_path, 'r') as csv_file:
        csv_reader = csv.reader(csv_file)
        for row in csv_reader:
            arrData.append(row)

#fungsi untuk membuat file beserta dengan headernya, dibuat hanya jika file belum ada
def create_file(csv_file_path):
    with open(csv_file_path, 'w', newline="") as csv_file:
        writer = csv.writer(csv_file)
        if csv_file_path == ('user.csv'):
            writer.writerow(['Nama', 'Tanggal_Lahir','Tinggi_Badan', 'Username', 'Password', 'Role', 'Saldo'])
            writer.writerow(['admin', '00/00/0000', '0', 'admin', 'password', 'admin', '0']) #ini akun untuk admin
	elif csv_file_path == 'wahana.csv':
            writer.writerow(['ID_Wahana', 'Nama_Wahana','Harga_Tiket', 'Batasan_Umur', 'Batasan_Tinggi'])
        elif csv_file_path == 'pembelian.csv':
            writer.writerow(['Username', 'Tanggal_Pembelian', 'ID_Wahana', 'Jumlah_Tiket'])
        elif csv_file_path == 'penggunaan.csv':
            writer.writerow(['Username', 'Tanggal_Penggunaan', 'ID_Wahana', 'Jumlah_Tiket'])
        elif csv_file_path == 'tiket.csv':
            writer.writerow(['Username', 'ID_Wahana', 'Jumlah_Tiket'])
        elif csv_file_path == 'refund.csv':
            writer.writerow(['Username', 'Tanggal_Refund', 'ID_Wahana', 'Jumlah_Tiket'])
        elif csv_file_path == 'kritiksaran.csv':
            writer.writerow(['Username', 'Tanggal_Kritik', 'ID_Wahana', 'Isi_Kritik'])

#fungsi untuk memasukkan array ke csv
def save_file(arr_data, csv_file_path):
    with open(csv_file_path, 'w', newline='') as csv_file:
        writer = csv.writer(csv_file)
        for i in range(len(arr_data)):
            writer.writerow(arr_data[i])
	   
#Fungsi Cari Pemain
def cari_pemain(arr_data):
    found = False
    pemain = input("Masukkan username : ")
    for baris in range (len(arr_data)):
        if arr_data[baris][3] == pemain:
            print('Nama Pemain :', arr_data[baris][0])
            print('Tinggi Pemain :', arr_data[baris][2])
            print("Tanggal lahir pemain :", arr_data[baris][1])
            found = True
            break
    if not found:
        print("Username tidak ditemukan, periksa kembali penulisan username / username tidak ada pada sistem kami")


#fungsi beli_tiket, agak panjang gatau sih. conditionalnya banyak
def beli_tiket(username, arr_data_beli, arr_data_user, arr_data_wahana):
    ID_Wahana = input("Masukkan ID wahana : ") #asumsi user selalu menginput hal yang benar
    tanggal = input("Masukkan tanggal hari ini : {format (DD/MM/YYYY)}") #asumsi input user selalu benar
    tahun_beli = int(tanggal[6:]) #dapatkan tahun pembelian
    jumlah_tiket = int(input("Jumlah tiket yang dibeli : "))

    #dapatkan tanggal lahir,tinggi_badan, dan saldo username yang diakses dari array yang berisi file user.csv
    for i in range(len(arr_data_user)):
        if arr_data_user[i][3] == username:
            indeks = i
            Tinggi_Badan = int(arr_data_user[i][2])
            saldo = int(arr_data_user[i][6])
            #Proses untuk mendapatkan kategori umur user
            date_born = arr_data_user[i][1] #tanggal lahir user
            tahun_lahir_user = int(date_born[6:]) #dapatkan tahun lahir user
            break
             
    #dapatkan data id Wahana, harga tiket, batasan umur dan batasan tinggi badan dari array berisi file wahana.csv
    for i in range (len(arr_data_wahana)):
        if arr_data_wahana[i][0] == ID_Wahana:
            harga_tiket = int(arr_data_wahana[i][2]) #dapatkan dalam bentuk integer
            batasan_umur = arr_data_wahana[i][3]
            batasan_tinggi = arr_data_wahana[i][4]
            break

    #asumsi umur yang mendekati umur tersebut dibulatkan
    #misal usia anak-anak 12 tahun, tahun sekarang 2020, tahun lahir user 2008, maka akan digenapkan menjadi 12 tahun meskipun sebenarnya ia belum ulang tahun pada tahun tersebut
    umur_user = tahun_beli - tahun_lahir_user
    if umur_user <= 12:
        kategori_user = 'anak-anak'
    elif umur_user >= 18:
        kategori_user = 'dewasa'
    else:
        kategori_user = 'semua umur'

    beli_sukses = False #tanda berhasil diproses atau tidak
    if batasan_umur == 'anak-anak' and kategori_user == 'anak-anak':
        #pada wahana anak-anak tidak ada batas tinggi badan
        if saldo >= harga_tiket * jumlah_tiket:
            beli_sukses = True
            print("Selamat bersenang-senang di Almond’s Charm!", username)
        else: #saldo tidak cukup
            print("Saldo Anda tidak cukup"); print("Silakan mengisi saldo Anda")
    elif batasan_umur == 'dewasa' and kategori_user == 'dewasa':
        if batasan_tinggi == '>=170' and Tinggi_Badan >= 170:
            if saldo >= harga_tiket*jumlah_tiket:
                beli_sukses = True
                print("Selamat bersenang-senang di Almond’s Charm!", username)
            else: #saldo kurang
                print("Saldo Anda tidak cukup"); print("Silakan mengisi saldo Anda")
        elif batasan_tinggi == '>=170' and Tinggi_Badan < 170:
            print("Anda tidak memenuhi persyaratan untuk memainkan wahana ini."); print("Silakan menggunakan wahana lain yang tersedia.")
        elif batasan_tinggi == 'tanpa batasan':
            if saldo >= harga_tiket*jumlah_tiket:
                beli_sukses = True
                print("Selamat bersenang-senang di Almond’s Charm!", username)
            else: #saldo kurang
                print("Saldo Anda tidak cukup"); print("Silakan mengisi saldo Anda")
    elif batasan_umur == 'semua umur':
        if batasan_tinggi == '>=170' and Tinggi_Badan >= 170:
            if saldo >= harga_tiket*jumlah_tiket:
                beli_sukses = True
                print("Selamat bersenang-senang di Almond’s Charm!", username)
            else: #saldo kurang
                print("Saldo Anda tidak cukup"); print("Silakan mengisi saldo Anda")
        elif batasan_tinggi == '>=170' and Tinggi_Badan < 170:
            print("Anda tidak memenuhi persyaratan untuk memainkan wahana ini."); print("Silakan menggunakan wahana lain yang tersedia.")
        elif batasan_tinggi == 'tanpa batasan':
            if saldo >= harga_tiket*jumlah_tiket:
                beli_sukses = True
                print("Selamat bersenang-senang di Almond’s Charm!", username)
            else: #saldo kurang
                print("Saldo Anda tidak cukup"); print("Silakan mengisi saldo Anda")
    else: #tidak ada persyaratan yang memenuhi
        print("Anda tidak memenuhi persyaratan untuk memainkan wahana ini."); print("Silakan menggunakan wahana lain yang tersedia.")

    data_input = [username, tanggal, ID_Wahana, jumlah_tiket] #menampung data input user untuk dimasukkan ke array_data_beli
    if beli_sukses == True:
        arr_data_beli.append(data_input) #pembelian berhasil, tambahkan data ke array global tempat data pembelian
        arr_data_user[indeks][6] = (saldo - harga_tiket * jumlah_tiket) #update nilai saldo user pada array berisi saldo





#Contoh cara pake
if path.exists(user_file): #jika file sudah ada langsung masukan isi csv ke array
    load(contact, user_file)
else: 
    create_file(user_file)
    load(contact,user_file)
#contact.append(refund)






#Endof Bagian Jafar










#Bagian Yudi







#End of bagian Yudi














#Bagian Karlsen










#Endof bagian Karlsen




















#Bagian Bona












#End of bagian Bona



